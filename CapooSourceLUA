-- ËÖ≥Êú¨‰ø°ÊÅØ
local scriptName = [=====[ Mod menu for Mini World]=====]
local scriptVersion = '2.8'
local scriptAuthor = 'SkyCapoo'
local startToast = ''
local checkTarget = 1 
local targetName = [=====[Mini World]=====]
local targetPkg = 'com.playmini.miniworld'
local targetVersion = [=====[1.7.11]=====]
local targetBuild = 67339
local processes = gg.getListItems()
local gameProcess = nil
local gameProcessName = "mini world" 
local username = ""
local publicbase = "liblibGameApp.so:bss"
local player_data_adress = 0x42FB8
APP = gg.getTargetInfo()
SJ = os.date("íÖíÂΩìÂâçÊó∂Èó¥%YÂπ¥%mÊúà%dÊó•%HÊó∂%MÂàÜ%SÁßííÖí")
gg.toast("loading UI")
loadYunLuaGroup("5C3C4E3813681C4C204C35346F1B4C2F7EFF612D2B22176FF346535E1C0B1E493339036EE15318")
function init()
 stab = _ENV["ÂàÜÈ°µ"]
 ttitle = _ENV["Ê†áÈ¢ò"]
 xfcpic = _ENV["ÊÇ¨ÊµÆÁ™óÂõæÊ†á"]
end
gg.toast("Ê≠£Âú®Êï¥ÁêÜÊ†∏ÂøÉ‰ª£Á¢º-ÂèØËÉΩÊôÇÈñìËºÉÈï∑Ë´ãËÄêÂøÉÁ≠âÂæÖ")
gg.sleep(320)
gg.toast("10ÔºÖ..")
function svip(af,ag) local gn,Dm={},{} for i,v in tostring(af):gmatch("%[(%s*%p*%d+)%] = '(.-)'") do gn[#gn+1]=v Dm[#Dm+1]=tonumber(i) end local GT=gg.choice(gn,2018,ag) local GY=Dm[GT] return GY end
gg.sleep(320)
function readString(address, length) local char = {} for i = 0, length - 1 do local value = GetValue(address + i * 0x1, 1) if value ~= 0 then char[#char + 1] = value & 0xFF else break end end return string.char(table.unpack(char)) end
function Split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end
gg.toast("15ÔºÖ...")
function LS(content) local _FOR_=function() return _FOR_ end local _ENV=function() return _ENV end local _UPVALUE0_=function() return _UPVALUE0_ end assert(type(content)=="") local temp={} local result={} local i=1 local ends=0 for i=1, #lines do if string.find(lines[i],"") then table.insert(temp,lines[i]) ends=ends+1 elseif string.find(lines[i],"") or string.find(lines[i],"") or string.find(lines[i],"") then ends=ends+1 if #temp==0 then table.insert(result,lines[i]) else table.insert(temp,lines[i]) end elseif string.find(lines[i],"") then ends=ends-1 if #temp==0 then table.insert(result,lines[i]) else table.insert(temp,lines[i]) end if ends==0 and #temp~=0 then table.insert(result,temp) temp={} end else if #temp==0 then table.insert(result,lines[i]) else table.insert(temp,lines[i]) end end end return result end 
gg.toast("18ÔºÖ...")
gg.sleep(320)
function GetAssignment(content) return string.match(content,"") end 
gg.toast("20ÔºÖ...")
function isSetGlobals(content) if string.find(content,"") then return true end if string.find(content,"") then return false end return false end 
gg.toast("25ÔºÖ...")
function FilteSpec(content) local spec="" for ia=1,string.len(spec) do local suba=""..string.sub(spec,ia,ia) content=(string.gsub(content,""..string.sub(spec,ia,ia),suba)) end return content end 
function Replace(content,locals) if isSetGlobals(content) then return content end local _i=0 local _v=0 for _i,_v in pairs(locals) do content=(string.gsub(content,_i,FilteSpec(tostring(_v)))) end return content end 
gg.toast("28ÔºÖ...")
function process(flines) local spots={} local funnames={} local result="" for i=1, #flines do if type(flines[i])=="" then if flines[i]~="" then name,value=GetAssignment(flines[i]) if name~=nil then if string.find(value,"") then spots[name]=nil result=result..flines[i].."" else spots[name]=Replace(value,spots) end elseif string.find(flines[i],"") then result=result..flines[i].."" local localss=string.match(flines[i],"") local tlocals=Split(localss,",") for j=1,#tlocals do spots[string.match(tlocals[j],"")]="" end else result=result..(Replace(flines[i],spots)).."" end end elseif type(flines[i]=="") then if i~=#flines then if flines[i][1]~=nil and type(flines[i][1]=="") then local funspot=string.match(flines[i][1],"") local funname= string.match(flines[i+1],""..funspot.."") if funname~=nil then flines[i][1]=(string.gsub(flines[i][1],funspot,FilteSpec(funname))) flines[i+1]="" end result=result..process(flines[i]).."" end end end end return result end 
function raw(s) for w in string.gmatch(s, "") do s=string.gsub(s,""..w,string.char(w),1) end return s end 
gg.sleep(320)
gg.toast("30ÔºÖ...")
function LO(ina,out) local _FOR_=function() return _FOR_ end local _ENV=function() return _ENV end local _UPVALUE0_=function() return _UPVALUE0_ end file=io.open(ina,"") script=file:read("") file:close() lines=Split(script,"") flines=LS(lines) unraw=process(flines) file=io.open(out,"") file:write(unraw) file:close() final=raw(unraw) file=io.open(out,"") file:write(final) file:close() end 
function LOO(ina) local _FOR_=function() return _FOR_ end local _ENV=function() return _ENV end local _UPVALUE0_=function() return _UPVALUE0_ end LO(ina,ina) end ggg = {} for k, v in pairs(gg) do ggg[k] = v end lde,mnsj={},{Dj="0.01",dv={},lz="/sdcard/.zbb",r={}} 
gg.toast("32ÔºÖ...")
function lde.qb()table.remove(bc,#bc)table.remove(bc,#bc)end 
gg.toast("35ÔºÖ...")
function readValue(read) local bf={} for i,v in ipairs(read) do bf[i]={address=v[1],flags=v[2]} end bf=gg.getValues(bf) for i=1,#bf do bf[i]=bf[i].value end return bf end 
gg.sleep(320)
gg.toast("40ÔºÖ...")
function nc_offset(addr,tablex,tt) for i,v in ipairs(tablex) do if v[4]==true then gg.addListItems({{address=addr+v[3],flags=v[2],value=v[1],freeze=v[4]}})else gg.setValues({{address=addr+v[3],flags=v[2],value=v[1]}}) end end gg.toast((tt or "").."ÂºÄÂêØÊàêÂäü") end 
function getso(So_name) return gg.getRangesList(So_name)[1].start end 
gg.toast("45ÔºÖ...")
function BaAdd(add) t=gg.getValues({[1]={address=add,flags=4}}) return t[1].value&0xFFFFFFFF end 
function readPointer(Add,Item) for i=1,(#Item-1) do Add=BaAdd(Add+Item[i]) end return Add+Item[#Item] end 
gg.sleep(320)
gg.toast("50ÔºÖ...")
function getnc(Name,nc) local t=gg.getRangesList(Name) for i, v in ipairs(t) do if v.state==nc then return v.start end end end 
gg.toast("55ÔºÖ...")
function Xilst() local iihj = ilht+1 gg.setRanges(4) local dataType = 4 local tb1 = {{ilht, 0},{iihj, 0x400},} local tb2 = {{ 0 }, } SearchWrite(tb1, tb2, dataType) sl=gg.getResultCount() jg=gg.getResults(100) for i = 1, sl do dzy=jg[i].address gg.addListItems({[1] = {address = dzy,flags = gg.TYPE_DWORD,freeze = true,value = ilht}}) end end 
gg.sleep(420)
gg.toast("60ÔºÖ...") 
function typetab(array, type) local datatype = {} for i = 1, #array do if Assert(array[i].type) then table.insert(datatype, i, array[i].type) else if Assert(type) then table.insert(datatype, i, type) else return false end end end return true, datatype end 
gg.toast("65ÔºÖ...")
function editData(qmnb,qmxg)gg.setVisible(false)gg.clearResults()qmnbv=qmnb[3]["value"]or qmnb[3][1]qmnbt=qmnb[3]["type"]or qmnb[3][2]qmnbn=qmnb[2]["name"]or qmnb[2][1]gg.setRanges(qmnb[1]["memory"]or qmnb[1][1])gg.searchNumber(qmnbv,qmnbt)gg.refineNumber(qmnbv,qmnbt)sz=gg.getResultCount()if sz==0 then gg.toast(qmnbn.."ÂºÄÂêØÂ§±Ë¥•")else sl=gg.getResults(999999)for i=1,sz do pdsz=true for v=4,#qmnb do if pdsz==true then pysz={{}}pysz[1].address=sl[i].address+(qmnb[v]["offset"]or qmnb[v][2])pysz[1].flags=qmnb[v]["type"]or qmnb[v][3]szpy=gg.getValues(pysz)tzszpd=tostring(qmnb[v]["lv"]or qmnb[v][1]):gsub(",","")pyszpd=tostring(szpy[1].value):gsub(",","")if tzszpd==pyszpd then pdjg=true pdsz=true else pdjg=false pdsz=false end end end if pdjg==true then szpy=sl[i].address for x=1,#qmxg do xgsz=qmxg[x]["value"]or qmxg[x][1]xgpy=szpy+(qmxg[x]["offset"]or qmxg[x][2])xglx=qmxg[x]["type"]or qmxg[x][3]xgdj=qmxg[x]["freeze"]or qmxg[x][4]xg={{address=xgpy,flags=xglx,value=xgsz}}if xgdj==true then xg[1].freeze=xgdj gg.addListItems(xg)else gg.setValues(xg)end end xgjg=true end end if xgjg==true then gg.toast(qmnbn.."ÂºÄÂêØÊàêÂäü")else gg.toast(qmnbn.."ÂºÄÂêØÂ§±Ë¥•")end end end D=gg.TYPE_DWORD E=gg.TYPE_DOUBLE F=gg.TYPE_FLOAT W=gg.TYPE_WORD B=gg.TYPE_BYTE X=gg.TYPE_XOR Q=gg.TYPE_QWORD 
function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end 
gg.sleep(520)
gg.toast("70ÔºÖ...")
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end
 function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "ÂºÄÂêØÂ§±Ë¥•") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "ÂºÄÂêØÂ§±Ë¥•") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "ÂºÄÂêØÊàêÂäü,Êîπ" .. xgsl .. "Êù°Êï∞ÊçÆ") else gg.toast(qmnb[2]["name"] .. "ÂºÄÂêØÂ§±Ë¥•") end end end end
gg.toast("75ÔºÖ...")
function SearchWrite(tb1, tb2, dataType, Name) local lt1={} local lt2={} local mm1={["‰∏ªÁâπÂæÅÁ†Å"] = tb1[1][1],["Á±ªÂûã"] = dataType } table.insert(lt1,1,mm1)   for i=2 , #tb1 do     local mm2={["ÂâØÁâπÂæÅÁ†Å"] = tb1[i][1],["ÂÅèÁßª"] = tb1[i][2]}     table.insert(lt1,i,mm2)   end   for i=1 , #tb2 do     if tb2[i][2]~=nil then       local mm3={["‰øÆÊîπ"] = tb2[i][1],["ÂÅèÁßª"] = tb2[i][2]}       table.insert(lt2,i,mm3)      else       local mm3={["‰øÆÊîπ"] = false,["ÂÅèÁßª"] = tb2[i][1]}       table.insert(lt2,i,mm3)     end   end   LongTao(lt1, lt2 ) end  function LongTao(Search, Write)   gg.clearResults()   gg.setVisible(false)   lx=Search[1]["Á±ªÂûã"]   gg.searchNumber(Search[1]["‰∏ªÁâπÂæÅÁ†Å"], lx)   local count = gg.getResultCount()   local result = gg.getResults(count)   gg.clearResults()   local data = {}   if (count > 0) then     gg.toast("ÂÖ±ÊêúÁ¥¢ "..count.." Êù°Êï∞ÊçÆ")     for i, v in ipairs(result) do       v.isUseful = true     end     for k=2, #Search do       local tmp = {}       local num = Search[k]["ÂâØÁâπÂæÅÁ†Å"]       if Search[k]["Á±ªÂûã"]~= nil then            lx =Search[k]["Á±ªÂûã"]          else            lx = Search[1]["Á±ªÂûã"]         end       for i, v in ipairs(result) do         tmp[#tmp+1] = {}         tmp[#tmp].address = v.address + Search[k]["ÂÅèÁßª"]         tmp[#tmp].flags = lx       end       tmp = gg.getValues(tmp)       for i, v in ipairs(tmp) do         if ( tostring(v.value) ~= tostring(num) ) then           result[i].isUseful = false         end       end     end     for i, v in ipairs(result) do       if (v.isUseful) then         data[#data+1] = v.address       end     end     if (#data > 0) then       local t = {}       for i=1, #data do         for k, w in ipairs(Write) do           if w["Á±ªÂûã"] ~= nil then              lx = w["Á±ªÂûã"]            else              lx = Search[1]["Á±ªÂûã"]           end           t[#t+1] = {}           t[#t].address = data[i] + w["ÂÅèÁßª"]           t[#t].flags = lx           if (w["‰øÆÊîπ"]~=nil) and (w["‰øÆÊîπ"]~=false) then             t[#t].value = w["‰øÆÊîπ"]             gg.setValues(t)             if (w["ÂÜªÁªì"] == true) then               local item = {}               item[#item+1] = t[#t]               item[#item].freeze = w["ÂÜªÁªì"]               gg.addListItems(item)             end           end         end       end       gg.loadResults(t)       gg.toast("ÂÖ±ÂÅèÁßªŒ∑"..#t.." Êù°Êï∞ÊçÆŒîŒò")      else       gg.toast("Êú™ÂÆö‰ΩçÂà∞Êï∞ÊçÆÔºÅ")       return false     end    else     gg.toast("Êú™ÂÆö‰ΩçÂà∞Êï∞ÊçÆÔºÅ")     return false   end end    local app = {} function Assert(data) if data == nil or data == "" or data == "nil" then return false else return true end end function mearrass(memory, array) if Assert(memory) and Assert(array) then return true else return false end end function typetab(array, type) local datatype = {} for i = 1, #array do if Assert(array[i].type) then table.insert(datatype, i, array[i].type) else if Assert(type) then table.insert(datatype, i, type) else return false end end end return true, datatype end function app.memorysearch(memory, array, type) gg.setVisible(false) local isok = mearrass(memory, array) if isok then local isok, datatype = typetab(array, type) if isok then if Assert(array[1].hv) then gg.clearResults() gg.setRanges(memory) gg.searchNumber(array[1].lv .. "~" .. array[1].hv, datatype[1]) else gg.clearResults() gg.setRanges(memory) gg.searchNumber(array[1].lv, datatype[1]) end if gg.getResultCount() == 0 then return false else local tab = {} local data = gg.getResults(gg.getResultCount()) gg.clearResults() for i = 1, #data do data[i].isok = true end for i = 2, #array do local t = {} local offset = array[i].offset for x = 1, #data do t[#t + 1] = {} t[#t].address = data[x].address + offset t[#t].flags = datatype[i] end local t = gg.getValues(t) for z = 1, #t do if Assert(array[i].hv) then if tonumber(t[z].value) < tonumber(array[i].lv) or tonumber(t[z].value) > tonumber(array[i].hv) then  data[z].isok = false end else if tostring(t[z].value) ~= tostring(array[i].lv) then data[z].isok = false end end end end for i = 1, #data do if data[i].isok then tab[#tab + 1] = data[i].address end end if #tab > 0 then return true, tab else return false end end else print("typeÂèÇÊï∞ÈîôËØØ") gg.toast("typeÂèÇÊï∞ÈîôËØØ") os.exit() end else print("memory or arrayÂèÇÊï∞ÈîôËØØ") gg.toast("memory or arrayÂèÇÊï∞ÈîôËØØ") os.exit() end end function app.memoryread(addr, type) local t = {} t[1] = {} t[1].address = addr t[1].flags = type if #t > 0 then return true, gg.getValues(t)[1].value else return false end end function app.memorywrite(addr, type, value, freeze) local t = {} t[1] = {} t[1].address = addr t[1].flags = type t[1].value = value if #t > 0 then if Assert(freeze) then t[1].freeze = freeze return gg.addListItems(t) else return gg.setValues(t) end else return false end end
function setvalue(address,flags,value) PS('‰øÆÊîπÂú∞ÂùÄÊï∞ÂÄº(Âú∞ÂùÄ,Êï∞ÂÄºÁ±ªÂûã,Ë¶Å‰øÆÊîπÁöÑÂÄº)') local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value gg.setValues(tt) end
gg.sleep(520)
gg.toast("80ÔºÖ...")
function PS() end function setvalue(address,flags,value) PS('‰øÆÊîπÂú∞ÂùÄÊï∞ÂÄº(Âú∞ÂùÄ,Êï∞ÂÄºÁ±ªÂûã,Ë¶Å‰øÆÊîπÁöÑÂÄº)') local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value gg.setValues(tt) end
local bx = os.date("%YÂπ¥%mÊúà%dÊó•%HÊó∂%MÂàÜ%SÁßí")print(bx)bqt={"üç¨","üìù","üçì","üçÅ","üé°","üîç","üê•","‚ú°üìå","üíü","‚ùÑÔ∏è","üëª","üíõ","‚≠ê","üç∫","üçÄ","üí£","üàØÔ∏è","üèÄ","üîã","üñº","üíé","üíô","üíú","üí´","üíì","üíñ","üçÄ","‚ö°","‚òëÔ∏è",}--ËÑöÊú¨Ê†∏ÂøÉÔºå‰∏çÂèØÂà™Èô§
gg.toast("85ÔºÖ...")
function getMapRanges() local ranges = {} local r_list = {} local _index = 1 local library = gg.getRangesList("^/data/*.so*$") for index, map in ipairs(library) do if map.type:sub(2, 2) == "w" or map.type == "r-xp" then local name = map.internalName local state = map.state local count = map.count if not r_list[name] then r_list[name] = {} end if not r_list[name][state] then r_list[name][state] = {0, _index} end r_list[name][state][1] = r_list[name][state][1] + 1 r_list[name][state][2] = _index map.count = r_list[name][state][1] table.insert(ranges, map) _index = _index + 1 end end return ranges, r_list end 
function staticstart(map) local ranges = getMapRanges() if not map[3] then map[3] = 1 end for index, value in ipairs(ranges) do local name = value.internalName:gsub("^.*/", "") if map[1] == name and map[2] == value.state and map[3] == value.count then return value.start end end end 
gg.sleep(620)
gg.toast("90ÔºÖ...")
function S_Pointer(t_So, t_Offset, _bit) local 
function getRanges() local ranges = {} local t = gg.getRangesList('^/data/*.so*$') for i, v in pairs(t) do if v.type:sub(2, 2) == 'w' then table.insert(ranges, v) end end return ranges end
function Get_Address(N_So, Offset, ti_bit) local ti = gg.getTargetInfo() local S_list = getRanges() local _Q = tonumber(0x63dd9d7) local t = {} local _t local _S = nil if ti_bit then _t = 32 else _t = 4 end for i in pairs(S_list) do local _N = S_list[i].internalName:gsub('^.*/', '') if N_So[1] == _N and N_So[2] == S_list[i].state then _S = S_list[i] break end end if _S then t[#t + 1] = {} t[#t].address = _S.start + Offset[1] t[#t].flags = _t if #Offset ~= 1 then for i = 2, #Offset do local S = gg.getValues(t) t = {} for _ in pairs(S) do if not ti.x64 then S[_].value = S[_].value & 0xFFFFFFFF end t[#t + 1] = {} t[#t].address = S[_].value + Offset[i] t[#t].flags = _t end end end _S = t[#t].address end return _S end local _A = string.format('0x%X', Get_Address(t_So, t_Offset, _bit)) return _A end 
gg.toast("95ÔºÖ...")
function GetValue(address, flag) return gg.getValues({{address = address, flags = flag}})[1].value end 
function GotoPointer(address, offset) local Addr = GetValue(address, 32) & 0xFFFFFFFFFF if offset then for k, v in pairs(offset) do Addr = GetValue(Addr + v, 32) & 0xFFFFFFFFFF end end return Addr end 
local modifiedValues = {}
function stringToBytes(str)
    local bytes = {}
    for i = 1, #str do
        table.insert(bytes, string.byte(str, i))
    end
    table.insert(bytes, 0) -- Ê∑ªÂä†Â≠óÁ¨¶‰∏≤ÁµêÊùüÁ¨¶
    return bytes
end
function modifyString(address, newString)
    local bytes = stringToBytes(newString)
    local values = {}
    for i = 1, #bytes do
        table.insert(values, {address = address + i - 1, flags = gg.TYPE_BYTE, value = bytes[i]})
    end
    gg.setValues(values)
end
function modifyAndFreezeString(address, newString, maxLength)
    maxLength = maxLength or 64
    local bytes = stringToBytes(newString)
    for i = 0, maxLength - 1 do
        local originalValue = gg.getValues({{address = address + i, flags = gg.TYPE_BYTE}})
        if not modifiedValues[address + i] then
            modifiedValues[address + i] = originalValue[1].value -- Ë®òÈåÑÂéüÂßãÂÄº
        end
    end
    while #bytes < maxLength do
        table.insert(bytes, 0)
    end
    local values = {}
    for i = 1, #bytes do
        table.insert(values, {
            address = address + i - 1,
            flags = gg.TYPE_BYTE,
            value = bytes[i],
            freeze = true
        })
    end
    gg.setValues(values)
    gg.addListItems(values)
end
lde = {}
lde.gre, lde.sbr, lde.srg, lde.crs = gg.getResults, gg.searchNumber, gg.setRanges, gg.clearResults
function bv(a, sep)
    sep = sep or "," 
    local result = {}
    for part in string.gmatch(a, "[^" .. sep .. "]+") do
        table.insert(result, part)
    end
    -- Ëã•Âè™Ëß£ÊûêÂà∞‰∏ÄÂÄãÂÄºÔºåÂâáË¶ñÁÇ∫ÂñÆ‰∏ÄÂÄºÁØÑÂúç
    if #result == 1 then
        result[2] = result[1]
    end
    return result
end
function so(a, b, c)
    gg.setVisible(false)
    local csn = gg.getRanges()
    gg.setRanges(a[3])
    gg.clearResults()
    gg.searchNumber(a[2], a[4])
    local js = gg.getResultCount()
    local cont = gg.getResults(js)
    gg.clearResults()
    if #cont == 0 then
        gg.setRanges(csn)
        return a[1] .. " ÈñãÂïüÂ§±Êïó"
    end
    local lode, lope, lobe = {}, {}, {}
    for p = 1, #b do
        lode[p] = {}
        for i = 1, #cont do
            lode[p][i] = {
                address = cont[i].address + b[p][2],
                flags = b[p][3] or a[4]
            }
        end
        lode[p] = gg.getValues(lode[p])

        local dbb = bv(b[p][1], "~")
        for i = 1, #lode[p] do
            local value = tonumber(lode[p][i].value)
            if value and value >= tonumber(dbb[1]) and value <= tonumber(dbb[2]) then
                table.insert(lope, cont[i])
            end
        end
        if #lope == 0 then
            gg.setRanges(csn)
            return a[1] .. " ÈñãÂïüÂ§±Êïó"
        end
        cont, lope = lope, {}
    end
    for i = 1, #c do
        for n = 1, #cont do
            local temp = {
                address = cont[n].address + c[i][2],
                flags = c[i][3] or a[4],
                value = c[i][1] or gg.getValues({{address = cont[n].address + c[i][2], flags = c[i][3] or a[4]}})[1].value
            }
            if c[i][4] then
                temp.freeze = (c[i][4] == 1)
            end
            if c[i][5] then
                temp.name = c[i][5]
            end
            table.insert(c[i][4] and lobe or lope, temp)
        end
    end
    gg.setValues(lope)
    gg.addListItems(lobe)
    gg.setRanges(csn)
    return a[1] .. " ÈñãÂïüÊàêÂäü"
end
function gg.FMatrix(value) local GT=gg.getListItems() local t={} for i,v in pairs(GT) do if v.value==value then table.insert(t,v) end end gg.removeListItems(t) end
function hqmz(a) local b='' for i=1,50 do local c=gg.getValues({{address=a+(i-1)*1,flags=1}})[1].value if c==0 then break end b=b..string.char(c<0 and 256+c or c) end if b=="" then b="ÊòµÁß∞Ëé∑ÂèñÂ§±Ë¥•" end  return b  end
function xe(name,offset,i) local re=gg.getRangesList(name) if re[i or 1] then local addr=re[i or 1].start+offset[1] for i=2,#offset do addr=gg.getValues({{address=addr,flags=32}}) addr=addr[1].value+offset[i] end return addr end end 
function gg.edits(addr,Table,name) local Table1 = {{}, {}} for k, v in ipairs(Table) do local value={address=addr+v[3],value=v[1],flags=v[2],freeze=v[4]}if v[4] then Table1[2][#Table1[2]+1]=value else Table1[1][#Table1[1]+1]=value end end gg.addListItems(Table1[2])gg.setValues(Table1[1]) if name then gg.toast((name or "") .. "ÂºÄÂêØÊàêÂäü") end end
function ntr(read) local bf={} for i,v in ipairs(read) do bf[i]={address=v[1],flags=v[2]} end bf=gg.getValues(bf)  for i=1,#bf do  bf[i]=bf[i].value  end return bf end
function md5(code) local code = tostring(code)    local HexTable = {"0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"}    local A = 0x67452301    local B = 0xefcdab89    local C = 0x98badcfe    local D = 0x10325476    local S11 = 7    local S12 = 12    local S13 = 17    local S14 = 22                 local S21 = 5       local S22 = 9       local S23 = 14       local S24 = 20       local S31 = 4       local S32 = 11       local S33 = 16       local S34 = 23       local S41 = 6       local S42 = 10       local S43 = 15       local S44 = 21       local function F(x,y,z)         return (x & y) | ((~x) & z)       end       local function G(x,y,z)         return (x & z) | (y & (~z))       end       local function H(x,y,z)         return x ~ y ~ z       end       local function I(x,y,z)         return y ~ (x | (~z))       end       local function FF(a,b,c,d,x,s,ac)         a = a + F(b,c,d) + x + ac         a = (((a & 0xffffffff) << s) | ((a & 0xffffffff) >> 32 - s)) + b         return a & 0xffffffff       end       local function GG(a,b,c,d,x,s,ac)         a = a + G(b,c,d) + x + ac         a = (((a & 0xffffffff) << s) | ((a & 0xffffffff) >> 32 - s)) + b         return a & 0xffffffff       end       local function HH(a,b,c,d,x,s,ac)         a = a + H(b,c,d) + x + ac         a = (((a & 0xffffffff) << s) | ((a & 0xffffffff) >> 32 - s)) + b         return a & 0xffffffff       end       local function II(a,b,c,d,x,s,ac)         a = a + I(b,c,d) + x + ac         a = (((a & 0xffffffff) << s) | ((a & 0xffffffff) >> 32 - s)) + b         return a & 0xffffffff       end       local function MD5StringFill(s)         local len = s:len()         local mod512 = len * 8 % 512         local fillSize = (448 - mod512) // 8         if mod512 > 448 then           fillSize = (960 - mod512) // 8         end         local rTab = {}         local byteIndex = 1         for i = 1,len do           local index = (i - 1) // 4 + 1           rTab[index] = rTab[index] or 0           rTab[index] = rTab[index] | (s:byte(i) << (byteIndex - 1) * 8)           byteIndex = byteIndex + 1           if byteIndex == 5 then             byteIndex = 1           end         end         local b0x80 = false         local tLen = #rTab         if byteIndex ~= 1 then           rTab[tLen] = rTab[tLen] | 0x80 << (byteIndex - 1) * 8           b0x80 = true         end         for i = 1,fillSize // 4 do           if not b0x80 and i == 1 then             rTab[tLen + i] = 0x80            else             rTab[tLen + i] = 0x0           end         end         local bitLen = math.floor(len * 8)         tLen = #rTab         rTab[tLen + 1] = bitLen & 0xffffffff         rTab[tLen + 2] = bitLen >> 32         return rTab       end              function getmd5(s)         local fillTab = MD5StringFill(s)         local result = {A,B,C,D}         for i = 1,#fillTab // 16 do           local a = result[1]           local b = result[2]           local c = result[3]           local d = result[4]           local offset = (i - 1) * 16 + 1           a = FF(a, b, c, d, fillTab[offset + 0], S11, 0xd76aa478)           d = FF(d, a, b, c, fillTab[offset + 1], S12, 0xe8c7b756)           c = FF(c, d, a, b, fillTab[offset + 2], S13, 0x242070db)           b = FF(b, c, d, a, fillTab[offset + 3], S14, 0xc1bdceee)           a = FF(a, b, c, d, fillTab[offset + 4], S11, 0xf57c0faf)           d = FF(d, a, b, c, fillTab[offset + 5], S12, 0x4787c62a)           c = FF(c, d, a, b, fillTab[offset + 6], S13, 0xa8304613)           b = FF(b, c, d, a, fillTab[offset + 7], S14, 0xfd469501)           a = FF(a, b, c, d, fillTab[offset + 8], S11, 0x698098d8)           d = FF(d, a, b, c, fillTab[offset + 9], S12, 0x8b44f7af)           c = FF(c, d, a, b, fillTab[offset + 10], S13, 0xffff5bb1)           b = FF(b, c, d, a, fillTab[offset + 11], S14, 0x895cd7be)           a = FF(a, b, c, d, fillTab[offset + 12], S11, 0x6b901122)           d = FF(d, a, b, c, fillTab[offset + 13], S12, 0xfd987193)           c = FF(c, d, a, b, fillTab[offset + 14], S13, 0xa679438e)           b = FF(b, c, d, a, fillTab[offset + 15], S14, 0x49b40821)           a = GG(a, b, c, d, fillTab[offset + 1], S21, 0xf61e2562)           d = GG(d, a, b, c, fillTab[offset + 6], S22, 0xc040b340)           c = GG(c, d, a, b, fillTab[offset + 11], S23, 0x265e5a51)           b = GG(b, c, d, a, fillTab[offset + 0], S24, 0xe9b6c7aa)           a = GG(a, b, c, d, fillTab[offset + 5], S21, 0xd62f105d)           d = GG(d, a, b, c, fillTab[offset + 10], S22, 0x2441453)           c = GG(c, d, a, b, fillTab[offset + 15], S23, 0xd8a1e681)           b = GG(b, c, d, a, fillTab[offset + 4], S24, 0xe7d3fbc8)           a = GG(a, b, c, d, fillTab[offset + 9], S21, 0x21e1cde6)           d = GG(d, a, b, c, fillTab[offset + 14], S22, 0xc33707d6)           c = GG(c, d, a, b, fillTab[offset + 3], S23, 0xf4d50d87)           b = GG(b, c, d, a, fillTab[offset + 8], S24, 0x455a14ed)           a = GG(a, b, c, d, fillTab[offset + 13], S21, 0xa9e3e905)           d = GG(d, a, b, c, fillTab[offset + 2], S22, 0xfcefa3f8)           c = GG(c, d, a, b, fillTab[offset + 7], S23, 0x676f02d9)           b = GG(b, c, d, a, fillTab[offset + 12], S24, 0x8d2a4c8a)           a = HH(a, b, c, d, fillTab[offset + 5], S31, 0xfffa3942)           d = HH(d, a, b, c, fillTab[offset + 8], S32, 0x8771f681)           c = HH(c, d, a, b, fillTab[offset + 11], S33, 0x6d9d6122)           b = HH(b, c, d, a, fillTab[offset + 14], S34, 0xfde5380c)           a = HH(a, b, c, d, fillTab[offset + 1], S31, 0xa4beea44)           d = HH(d, a, b, c, fillTab[offset + 4], S32, 0x4bdecfa9)           c = HH(c, d, a, b, fillTab[offset + 7], S33, 0xf6bb4b60)           b = HH(b, c, d, a, fillTab[offset + 10], S34, 0xbebfbc70)           a = HH(a, b, c, d, fillTab[offset + 13], S31, 0x289b7ec6)           d = HH(d, a, b, c, fillTab[offset + 0], S32, 0xeaa127fa)           c = HH(c, d, a, b, fillTab[offset + 3], S33, 0xd4ef3085)           b = HH(b, c, d, a, fillTab[offset + 6], S34, 0x4881d05)           a = HH(a, b, c, d, fillTab[offset + 9], S31, 0xd9d4d039)           d = HH(d, a, b, c, fillTab[offset + 12], S32, 0xe6db99e5)           c = HH(c, d, a, b, fillTab[offset + 15], S33, 0x1fa27cf8)           b = HH(b, c, d, a, fillTab[offset + 2], S34, 0xc4ac5665)           a = II(a, b, c, d, fillTab[offset + 0], S41, 0xf4292244)           d = II(d, a, b, c, fillTab[offset + 7], S42, 0x432aff97)           c = II(c, d, a, b, fillTab[offset + 14], S43, 0xab9423a7)           b = II(b, c, d, a, fillTab[offset + 5], S44, 0xfc93a039)           a = II(a, b, c, d, fillTab[offset + 12], S41, 0x655b59c3)           d = II(d, a, b, c, fillTab[offset + 3], S42, 0x8f0ccc92)           c = II(c, d, a, b, fillTab[offset + 10], S43, 0xffeff47d)           b = II(b, c, d, a, fillTab[offset + 1], S44, 0x85845dd1)           a = II(a, b, c, d, fillTab[offset + 8], S41, 0x6fa87e4f)           d = II(d, a, b, c, fillTab[offset + 15], S42, 0xfe2ce6e0)           c = II(c, d, a, b, fillTab[offset + 6], S43, 0xa3014314)           b = II(b, c, d, a, fillTab[offset + 13], S44, 0x4e0811a1)           a = II(a, b, c, d, fillTab[offset + 4], S41, 0xf7537e82)           d = II(d, a, b, c, fillTab[offset + 11], S42, 0xbd3af235)           c = II(c, d, a, b, fillTab[offset + 2], S43, 0x2ad7d2bb)           b = II(b, c, d, a, fillTab[offset + 9], S44, 0xeb86d391)           result[1] = result[1] + a           result[2] = result[2] + b           result[3] = result[3] + c           result[4] = result[4] + d           result[1] = result[1] & 0xffffffff           result[2] = result[2] & 0xffffffff           result[3] = result[3] & 0xffffffff           result[4] = result[4] & 0xffffffff         end         local retStr = ''       for i = 1,4 do           for _= 1,4 do             local temp = result[i] & 0x0F             local str = HexTable[temp + 1]             result[i] = result[i] >> 4             temp = result[i] & 0x0F             retStr = retStr .. HexTable[temp + 1] .. str             result[i] = result[i] >> 4           end         end         return string.lower(retStr)       end       return getmd5(code)     end
gg.toast("100ÔºÖ...")
gg.sleep(1020)
gg.toast("‰ª£Á¢ºÊï¥ÂêàÂÆåÁï¢. . .")
gg.sleep(1020)
-- È°ØÁ§∫ÂïüÂãïË®äÊÅØ
if startToast ~= '' then startToast = '\n'..startToast end
gg.toast(scriptName..' v'..scriptVersion..' by '..scriptAuthor..startToast)

-- ÈÄ≤Á®ãÊ™¢Êü•
function checkProcess()
if gg.getTargetInfo()["label"] ~="Mini World" then
print("‚ùóErrorÈÄ≤Á®ãÈåØË™§ÔºåÊ≥®ÂÖ•Â§±Êïó")
gg.toast("‚ùóErrorÈÄ≤Á®ãÈåØË™§ÔºåÊ≥®ÂÖ•Â§±Êïó")
Lock.unUi()
gg.exit()
end
if gg.getTargetInfo()["versionName"] ~= targetVersion then
gg.alert("‚ùóÁâàÊú¨‰∏çÊòØ" .. targetVersion .."ÔºåÊ≥®ÂÖ•Â§±Êïó")
gg.toast("‚ùóErrorÁâàÊú¨ÈåØË™§ÔºåÊ≥®ÂÖ•Â§±Êïó")
Lock.unUi()
gg.exit()
end
end
checkProcess()  -- Ê™¢Êü•Áï∂ÂâçÈÄ≤Á®ãÊòØÂê¶Á¨¶ÂêàÁõÆÊ®ôÈÅäÊà≤
function c()
local t = {"libanogs.so:bss", "Cb"}
local tt = {0x10}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x480}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x4B4}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x4B8}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x6F8}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x778}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x7CC}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x7E4}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x7F0}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x908}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x19E0}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x1A18}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x1B18}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x1BD0}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x1C48}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x19B8}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x1BA8}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x458}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x6D0}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})

local t = {"libanogs.so:bss", "Cb"}
local tt = {0x750}
local ttt = S_Pointer(t, tt, true)
gg.addListItems({{address = ttt, flags = 4, value = 0, freeze = true}})
gg.toast("ÈÅéÊ™¢Ê∏¨Â∑≤ÈñãÂïü")
end
function checkplayerdata()
local t = {publicbase, "Cb"}
local tt = {player_data_adress, 0x49}
local tttrr = S_Pointer(t, tt, true)
Myname = readString(tttrr, 64)
local t = {publicbase, "Cb"}
local tt = {player_data_adress, 0x8}
local tttdd = S_Pointer(t, tt, true)
Myuid = GetValue(tttdd,4)
local t = {publicbase, "Cb"}
local tt = {0x43F9C0, 0x2E}
local tttyy = S_Pointer(t, tt, true)
MyIPv4 = readString(tttyy,12)
end

function Sendtolog()
checkplayerdata()
user_name = username
player_name = Myname
player_uid = Myuid
myIPAddress = MyIPv4
webhook_url = "https://discord.com/api/webhooks/1293219977096073319/32svVajM7yY925l54bUIOCXSWGMRN6gZAlORdLEqmSFrCznr6SFFALme25t5u4V3fSy2"
if not player_name then
    player_name = "nil"
elseif not player_uid or player_uid == 0 then
    player_uid = "nil"
elseif not myIPAddress then
    myIPAddress = "nil"
end
payload = [[
{
  "content": "UserName: (]] .. user_name .. [[) PlayerName: (]] .. player_name .. [[) uid: (]] .. player_uid .. [[) IP: (]] .. myIPAddress .. [[) logged in SkyCapooUI"
}
]]
headers = {
    ["Content-Type"] = "application/json"
}
local response = gg.makeRequest(webhook_url, headers, payload)
end





--‰∫ëÊ®°ÂùóÂãøÂä®

--[ÂÖçË¥πUI] ‰ª£Âè∑E03 ‰ΩúËÄÖÈïøÂÆâQ1903351873ÔºàÂÆöÂà∂200Ëµ∑ Â∏¶ËØ¶ÁªÜÈúÄÊ±ÇÊù• ÂÖ∂‰ªñ‰∫ã‰∏çÁÆ° ‰∏çÂåÖ‰ΩøÁî®ÊïôÁ®ãÔºâ
--Ê≠§UI‰ªÖÊîØÊåÅELGG‰ΩøÁî®
--ELGGÂÆòÊñπQÁæ§778101805

--ÊîØÊåÅÁöÑÊéß‰ª∂ÊúâÔºö

--ÊñáÂ≠óÔºö
--CAtext([string ÊñáÂ≠ó] , [È¢úËâ≤RGBÂçÅÂÖ≠ËøõÂà∂]ÔºàÂèØÁúÅÁï•Ôºâ , [string Â§ßÂ∞èsp]ÔºàÂèØÁúÅÁï•Ôºâ , [bool ÂÜôtrueÂ±Ö‰∏≠falseÊàñÁïôÁ©∫‰∏çÂ±Ö‰∏≠]ÔºàÂèØÁúÅÁï•Ôºâ)
--Á¨¨‰∫åÁ¨¨‰∏âÁ¨¨ÂõõÂèÇÊï∞ÂèØÁúÅÁï• ËØ¶ÊÉÖÁúã‰∏ãÊñπ‰æãÂ≠ê
--È¢úËâ≤ÂèØ‰ª•ÊòØstring '#ffffffff' ‰πüÂèØ‰ª•ÊòØÂçÅÂÖ≠ËøõÂà∂ 0xffffffff Ê≥®ÊÑèÊ†ºÂºè‰∏çË¶ÅÊ∑∑

--ÊåâÈíÆÔºö
--CAbutton([string ÊñáÂ≠ó] , [function ÂäüËÉΩ] , [string È¢úËâ≤RGBÂçÅÂÖ≠ËøõÂà∂]ÔºàÂèØÁúÅÁï•Ôºâ)
--È¢úËâ≤ÂèØ‰ª•ÊòØstring '#ffffffff' ‰πüÂèØ‰ª•ÊòØÂçÅÂÖ≠ËøõÂà∂ 0xffffffff Ê≥®ÊÑèÊ†ºÂºè‰∏çË¶ÅÊ∑∑
--Ê≥®ÊÑèÂè™‰º†ÂÖ•‰∏Ä‰∏™function‰∏çË¶Å‰∏éswitchÊêûÊ∑∑


--switchÂºÄÂÖ≥Ôºö
--CAswitch([string ÊñáÂ≠ó] , [function ÂäüËÉΩÂºÄ] , [function ÂäüËÉΩÂÖ≥] , [string ÊèèËø∞]ÔºàÂèØÁúÅÁï•Ôºâ)
--Á¨¨ÂõõÂèÇÊï∞ÊèèËø∞ÂèØÁúÅÁï• ËØ¶ÊÉÖÁúã‰∏ãÊñπ‰æãÂ≠ê
--Ê≥®ÊÑèÈúÄ‰º†ÂÖ•‰∏§‰∏™function‰∏çË¶Å‰∏ébuttonÊêûÊ∑∑

--checkboxÂ∞èÂºÄÂÖ≥ÂàóË°®
--CAcheck([table])
--ÊØîËæÉÂ§çÊùÇËøôÈáå‰∏çËØ¥‰∫Ü Áúã‰∏ãËæπ‰æãÂ≠ê ÊåâÈúÄÂ§çÂà∂Á≤òË¥¥ Âè™ÈúÄË¶ÅÊêûÊáÇÂü∫Á°ÄËØ≠Ê≥ïÂ∞±ËÉΩÁî® ‰∏çË¶ÅÈóÆÊàë


--ÊäòÂè†box
--CAbox({[ÂêçÁß∞],[Êéß‰ª∂],[Êéß‰ª∂],[Êéß‰ª∂],[Êéß‰ª∂],...})
--ÂÖ∑‰ΩìÁúã‰∏ãÊñπ‰æãÂ≠êÔºå‰ΩøÁî®Êó∂Ë¶ÅÊ≥®ÊÑèÊã¨Âè∑ÂèäÈÄóÂè∑ÁöÑËØ≠Ê≥ïÔºå‰∏çË¶ÅÊù•ÈóÆÊàë„ÄÇ




--ËøôÈáåÂÜô‰Ω†ÁöÑÈ™åËØÅ„ÄÅÂâçÁΩÆÂäüËÉΩÂáΩÊï∞Ôºå‰∏ãËæπUIÈÖçÁΩÆÂå∫ÂÜôÊåâÈíÆË∞ÉÁî®

pcall(
	load(
		gg.makeRequest(
			"https://raw.githubusercontent.com/SkyCapoo/capooGG.UI/main/Capoofunc"
		).content
	)
)



-------------------------------------------------------------------------------------------------‰ªãÈù¢Ë®≠ÂÆö-----------------------------------------------------------------------------------------------------
function starttheUI()
_ENV["ÊÇ¨ÊµÆÁ™óÂõæÊ†á"] = 'https://www.pnglog.com/7CSPjJ.png'
--ÂÜôÂõæÁâáÊñá‰ª∂Áõ¥Èìæ

_ENV["Ê†áÈ¢ò"] = 'SkyCapoo - UI'


_ENV["ÂàÜÈ°µ"] = {
	--ÂØºËà™Ê†èÂàÜÈ°µÂêçÂ≠óÂíåÂõæÊ†áÔºåÊ∑ªÂä†Ë°®Âç≥ÂèØÂä†È°µÊï∞ÔºåÈúÄË¶Å‰∏éÂäüËÉΩÈÖçÁΩÆÈ°µÈù¢Êï∞ÈáèÂØπÂ∫î
	'Èò≤ÈñÉ/ÂÖ¨Âëä',
	'PvPÂäüËÉΩ',
	'ËÅØÊ©üÂäüËÉΩ',
	'Êàø‰∏ªÂäüËÉΩ',
	'ÁæéÂåñÂäüËÉΩ',
	'ÊßçÊ¢∞ÂäüËÉΩ',
	'ËºîÂä©Ë®≠ÁΩÆ',
	--'ËÆæÁΩÆ',--ËøôÊ†∑Ê∑ªÂä†Êñ∞È°µÈù¢

}


init()    --‰º†ÈÄíÂèòÈáèÂãøÂä®
gg.toast("Ê≠£Âú®Ê≥®ÂÖ•üîì")
uistart({ --ÊØè‰∏Ä‰∏™ÂäüËÉΩÈ°µÈù¢ÈúÄË¶ÅÊúâ‰∏äËæπÂàÜÈ°µÂêçÂ≠óÂØπÂ∫îÔºåÂ§öÂá∫Êù•ÁöÑ‰∏çÊòæÁ§∫ÔºåÂ∞ë‰∫ÜÈúÄË¶ÅË°•ÂÖÖ
	{     --1
		CAtext('ÂÖ¨Âëä', '#005BFF', '14sp'),



		CAtext(''..scriptAuthor..'_v'..scriptVersion..' ÂÖ¨ÁõäËºîÂä©', '#FFD306', '12sp', true),
        CAbutton(
			'‰ΩøÁî®ËÄÖÂêçÁ®±: '.. username,
			function()
				gg.alert('‰ΩøÁî®ËÄÖÂêçÁ®±: '.. username)
			end),
			
		CAbutton(
			'Êó•ÊúüÊôÇÈñì',
			function()
				a()
			end),

		CAbutton(
			'ËºîÂä©‰ΩúËÄÖ',
			function()
				gg.alert('https://youtube.com/@capoo_scriptmaker?si=E-4LwQYEMpwlTLfm')
			end,
			0xff0062ff),
       CAbutton(
			'ÈÅ∏ÊìáÈÄ≤Á®ã',
			function()
				gg.setProcessX()
			end,
			0xff0062ff),

		CAtext('ÂÜÖÂ≠òÂàÜÂçÄ'),
		CAswitch(
			"ÈõôÈñãÈò≤ÈñÉ",
			function()
			 c()
            gg.alert('Èò≤ÈñÉÂ∑≤ÈñãÂïü')
			end,
			function()
            gg.alert('Èò≤ÈñÉÂ∑≤ÈóúÈñâ')
			end,
			'ÈÄ≤ÈÅäÊà≤‰πãÂâçÈñã'),

		CAswitch(
			"Ê™¢Ê∏¨ÈÄ≤Á®ã",
			function()
               b()
			end,
			function()
            gg.alert('Ê™¢Ê∏¨ÈóúÈñâ')
			end),
		CAbutton(
			'Ê∏ÖÁêÜÂÑ≤Â≠ò',
			function()
				gg.clearList()
				gg.toast("ÂÖßÂ≠òÊ∏ÖÁêÜÊàêÂäü")
			end,
			0xff0062ff), --Á¨¨‰∏âÂèÇÊï∞È¢úËâ≤





	}, { --2

		CAtext('PVPÂäüËÉΩ', '#005BFF', '14sp'),
		CAbox({ 'ÊÆ∫ÊàÆÂÖâÁí∞',
			CAtext('PVPÂ§ß‰Ω¨', '#ffffff', '12sp', true),
			CAswitch(
				'HITBOXÂÉÖÁé©ÂÆ∂',
				function()
                   hitbox()
				end,
			function()
               hitboxrestore()
			end,
			'Á¢∞ÊíûÁÆ±'),
			CAswitch(
			"ÂÇ≥ÈÄÅÂÖâÁí∞",
			function()
               player_TPCollision1()
			end,
			function()
               player_TPCollision2()
			end,
			'ÂñÆÂçÄÂüüÂÇ≥ÈÄÅ'),
            CAswitch(
			"ÊîªÊìäÂãïÁï´",
			function()
               attack_animation1()
			end,
			function()
               attack_animation2()
			end,
			'ÊâãÈÉ®ÈúáÂãï'),
		}),

		CAtext('ÂàÜÂçÄ'),

		CAcheck({
			{
				"ÈÄ£Ë∑≥",
				function()
                  infjump1()
				end,
				function()
                  infjump2()
				end
			}, {
			"È£õÂ§©",
			function()
              fly1()
			end,
			function()
              fly2()
			end
		}, {
			"È£õÊ™¢Ê∏¨",
			function()
              nopflytask1()
			end,
			function()
              nopflytask2()
			end
		}, {
			"Âπ≥È£õ",
			function()
             XyFly1()
			end,
			function()
             XyFly2()
			end
		},

		}),
		CAswitch(
			"PVPË∂ÖÂª£Ëßí",
			function()
               pvpvioce1()
			end,
			function()
               pvpvioce2()
			end,
			'Â•îË∑ëËß∏Áôº'),
      	CAswitch(
			"‰∫∫Áâ©Èö±Ë∫´",
			function()
               invisible1()
			end,
			function()
               invisible2()
			end,
			'Á¢∫‰øùÈ†≠‰∏äÊ≤íÊñπÂ°ä'),
	CAswitch(
			"Ê∫ñÂøÉÂñÆ‰∫∫Ëá™ÁûÑ",
			function()
               fpsaimbot1()
			end,
			function()
               fpsaimbot2()
			end,
			'Ëá™ÂãïÁûÑÊ∫ñ'),
	CAswitch(
			"Âãï‰ΩúÂñÆ‰∫∫Ëá™ÁûÑ",
			function()
               Actionaimbot1()
			end,
			function()
               Actionaimbot2()
			end,
			'Ëá™ÂãïÁûÑÊ∫ñ'),
	CAswitch(
			"Èù†ËøëÁé©ÂÆ∂Ê∫ñÂøÉËá™ÁûÑ",
			function()
               playerAimbot1()
			end,
			function()
               playerAimbot2()
			end,
			'Ëá™ÁûÑ'),
	CAswitch(
			"Èù†ËøëÁé©ÂÆ∂Âãï‰ΩúËá™ÁûÑ",
			function()
               playermvAimbot1()
			end,
			function()
               playermvAimbot2()
			end,
			'Ëá™ÁûÑ'),
}, { --3

     CAtext('ËÅØÊ©üÂäüËÉΩ', '#005BFF', '14sp'),
     CAbox({
         "ÂÅΩÊàø‰∏ª",
			CAtext('ÊàøÈñìÁí∞Â¢É', '#ffffff', '12sp', true),
			CAbutton(
				'ÂñÆÊ©üÊàøÈñì',
				function()
                   Fakehost1()
				end),
			CAbutton(
				'ÈñãÁôºËÄÖ',
				function()
                   Fakehost2()
				end),
			CAbutton(
				'ÊàøÈñìÊàêÂì°',
				function()
                   Fakehost3()
				end),
			CAbutton(
				'ÊàøÈñìÊàø‰∏ª',
				function()
                   Fakehost4()
				end),
		}),
     CAbox({
         "ÈÅäÊà≤Ê®°Âºè",
			CAtext('‰øÆÊîπÊ®°Âºè', '#ffffff', '12sp', true),
			CAbutton(
				'ÁîüÂ≠òÊ®°Âºè',
				function()
                   gamemode1()
				end),
			CAbutton(
				'ÁîüÂ≠òÂâµÈÄ†',
				function()
                   gamemode2()
				end),
			CAbutton(
				'Áé©Ê≥ïÊ®°Âºè',
				function()
                   gamemode3()
				end),
			CAbutton(
				'Áé©Ê≥ïÂâµÈÄ†',
				function()
                   gamemode4()
				end),
		}),
     CAbox({
         "Ë¶ñËßí",
			CAtext('‰øÆÊîπË¶ñËßí', '#ffffff', '12sp', true),
			CAbutton(
				'‰∏ªË¶ñËßí',
				function()
                   perspective1()
				end),
			CAbutton(
				'ËÉåË¶ñËßí',
				function()
                   perspective2()
				end),
			CAbutton(
				'Ê≠£Ë¶ñËßí',
				function()
                   perspective3()
				end),
			CAbutton(
				'360Â∫¶Ë¶ñËßí',
				function()
                   perspective4()
				end),
			CAbutton(
				'‰øØË¶ñËßí',
				function()
                   perspective5()
				end),
			CAbutton(
				'Ë¶ñËßíÈùàÈ≠ÇÂá∫Á´Ö',
				function()
                   perspective6()
				end),
		}),
      CAtext('Á∂úÂêàÂäüËÉΩÂàÜÂçÄ'),
		CAcheck({
			{
			"‰∫∫Áâ©Á©øÁâÜ",
				function()
                  noclip1()
				end,
				function()
                  noclip2()
				end
			}, {
			"‰∫∫Áâ©È£õÂçá",
			function()
            antoFlyupd1()
			end,
			function()
            antoFlyupds1()
			end
		}, {
			"‰∫∫Áâ©Á∑©Èôç",
			function()
             slowfalld1()
			end,
			function()
             slowfalld2()
			end
		}, {
			"‰∫∫Áâ©ÈÄèË¶ñ",
			function()
             perspectivef1()
			end,
			function()
             perspectivef2()
			end
		},
		

		}),
CAbutton(
				'ÂÄâÂ∫´ÂèñÁâ©',
				function()
                   cloudcheangeitems()
				end),
CAbutton(
				'Êâã‰∏≠Áâ©ÂìÅID',
				function()
                   handitemID()
				end),
CAbutton(
				'ÊàøÂì°‰ø°ÊÅØ',
				function()
                   readplayer()
				end),
		CAtext('Ëá™ÂÆöÁæ©‰øÆÊîπÂçÄ'),

		CAswitch(
			"Ê∫ñÂøÉÊóãËΩâ",
			function()
			AA3s = gg.prompt({"ËæìÂÖ•ÊóãËΩâÈÄüÂ∫¶"}
             ,{[1]=10},{[1]="number"})[1]
             gg.toast("Ê∫ñÂøÉÊóãËΩâÂ∑≤ÈñãÂïü")
             if not AA3s then gg.toast("Êìç‰ΩúÂèñÊ∂à") return end
             ikun=0
               autohead1()
			end,
			function()
               autohead2()
			end,
			'Ëá™ÂãïÊóãËΩâ'),
		CAswitch(
			"‰∫∫Áâ©ÊóãËΩâ",
			function()
AA3s2 = gg.prompt({"ËæìÂÖ•ÊóãËΩâÈÄüÂ∫¶"}
             ,{[1]=10},{[1]="number"})[1]
             gg.toast("ËΩâÈ†≠ÊóãËΩâÂ∑≤ÈñãÂïü")
             if not AA3s2 then gg.toast("Êìç‰ΩúÂèñÊ∂à") return end
             ikun2=0
               autodohead1()
			end,
			function()
               autodohead2()
			end,
			'Ëá™ÂãïÊóãËΩâ'),
		CAswitch(
			"ÊóãËΩâÈ†≠ÈÉ®",
			function()
AA4s2 = gg.prompt({"ËæìÂÖ•ÊóãËΩâÈÄüÂ∫¶"}
             ,{[1]=10},{[1]="number"})[1]
             gg.toast("ÊóãËΩâÈ†≠ÈÉ®Â∑≤ÈñãÂïü")
             if not AA4s2 then gg.toast("Êìç‰ΩúÂèñÊ∂à") return end
             ikun3=0
               autodoheads1()
			end,
			function()
               autoheads2()
			end,
			'Ëá™ÂãïÊóãËΩâ'),
         CAswitch(
			"È†≠ÈÉ®Ë≤ºË∫´",
			function()
               headunder1()
			end,
			function()
               headunder2()
			end,
			'ÁÑ°È†≠Êà∞Â£´'),
CAswitch(
			"ÁßíÂêÉÈ£üÁâ©",
			function()
               Fasteat1()
			end,
			function()
               Fasteat2()
			end,
			''),
CAbutton(
				'ÁßªÂãïÈÄüÂ∫¶',
				function()
                   movespeed()
				end,
			'#FF9224'),
CAbutton(
				'Ë∑≥Ë∫çÈ´òÂ∫¶',
				function()
                   runspeed()
				end,
			'#FF9224'),
CAbutton(
				'ÊòüÊòüÊï∏Èáè',
				function()
                   setstar()
				end,
			'#FF77FF'),
CAbutton(
				'‰∫∫Áâ©Â§ßÂ∞è',
				function()
                   sizexyz()
				end,
			'#FF77FF'),
CAbutton(
				'‰∏äÂ∏ùË¶ñËßí',
				function()
                   godvoice()
				end,
			'#F9F900'),
CAbutton(
				'Á∑®ËºØÂô®Â°´ÂÖÖÁâ©',
				function()
                   setworldtoolitemblocks()
				end,
			'#F9F900'),
     CAbox({
         "Âà∑Âã≥Á´†",
			CAtext('Âã≥Á´†È°ûÂûã', '#ffffff', '12sp', true),
			CAbutton(
				'ËåÅÂ£ØÊàêÈï∑',
				function()
                   plantlvmedal()
				end),
			CAbutton(
				'ËèØÈ∫óËÆäË∫´',
				function()
                   skinmedal()
				end),
			CAbutton(
				'È†êÁïôÂäüËÉΩ',
				function()
                   
				end),
			CAbutton(
				'È†êÁïôÂäüËÉΩ',
				function()
                   
				end),
		}),

}, { --4
     CAtext('Êàø‰∏ªÂäüËÉΩ', '#005BFF', '14sp'),
   CAtext('‰∫∫Áâ©Â±¨ÊÄß','#FFFFFF', '12sp', true),
  CAbutton(
				'ÊúÄÂ§ßË°ÄÈáè',
				function()
                   playermaxhp()
				end,
			'#00CC00'),
CAbutton(
				'Áï∂ÂâçË°ÄÈáè',
				function()
                   playerhp()
				end,
			'#00CC00'),
CAbutton(
				'ÊÅ¢Âæ©Ë°ÄÈáè',
				function()
                   playerrehp()
				end,
			'#00CC00'),
CAbutton(
				'ÊîªÊìäÂÇ∑ÂÆ≥',
				function()
                   playerhitdamge()
				end,
			'#00CC00'),
	CAtext('ÂÖ∂‰ªñ','#FFFFFF', '12sp', true),
CAbutton(
				'Êàø‰∏ªÂèñÁâ©',
				function()
                   hostitemshack()
				end,
			'#FF77FF'),
CAbutton(
				'ÂÆöÈªûÂÇ≥ÈÄÅ',
				function()
                   teleport()
				end,
			'#FF77FF'),
CAbutton(
				'‰øÆÊîπÂ§©Êï∏',
				function()
                   changeday()
				end,
			'#FF77FF'),
CAbutton(
				'‰øÆÊîπÊôÇÈñì',
				function()
                   changetime()
				end,
			'#FF77FF'),
CAbutton(
				'‰øÆÊîπÈöä‰ºç',
				function()
                   changeteam()
				end,
			'#FF77FF'),
CAbutton(
				'ÈñãÊàø‰∫∫Êï∏',
				function()
                   changeroomplayerquantity()
				end,
			'#FF77FF'),
}, { --5

     CAtext('ÁæéÂåñÂäüËÉΩ', '#005BFF', '14sp'),
  CAtext('ÁæéÂåñÂçÄ','#FF77FF', '12sp', true),
CAbutton(
				'ËÅØÊ©üÁöÆËÜö',
				function()
                   PlayerSkin()
				end,
			'#FF77FF'),
CAbutton(
				'‰∫∫Áâ©Âãï‰Ωú',
				function()
                   playerAction()
				end,
			'#FF77FF'),
CAbutton(
				'‰∫∫Áâ©ÁâπÊïà',
				function()
                   loopeffect1()
				end,
			'#FF77FF'),
CAbutton(
				'‰øÆÊîπÂØµÁâ©',
				function()
                   Pets1()
				end,
			'#FF77FF'),
CAbutton(
				'Âô¥ÊºÜÊîπÁâ©',
				function()
                   itemschangehack()
				end,
			'#FF77FF'),
 CAtext('ÁúüÂØ¶ÊúâÊïàÂçÄ','#F9F900', '12sp', true),
CAbutton(
				'ËÅØÊ©üÊîπÂêç',
				function()
                   changename()
				end,
			'#F9F900'),
CAbutton(
				'ËÆÄÂèñÂêçÁ®±',
				function()
                   readmyname()
               	end,
			'#F9F900'),
CAbutton(
				'Ëá™ÂÆöÁæ©È†≠Áõ∏Ê°Ü',
				function()
                   playerphotoframe()
				end,
			'#F9F900'),
CAbutton(
				'Ê∑ªÂä†ÂùêÈ®é',
				function()
                   MountsUI()
				end,
			'#F9F900'),
CAbutton(
				'ËÅØÊ©üËßíËâ≤',
				function()
                   changeRole1()
				end,
			'#F9F900'),
CAbutton(
				'Ëß£ÈéñÁâ©ÂìÅ',
				function()
                   unlockallitems()
				end,
			'#F9F900'),
}, { --6
CAtext('ÊßçÊ¢∞ÂäüËÉΩ', '#005BFF', '14sp'),
CAtext('ÂÉÖÊàø‰∏ª'),
CAbutton(
				'Â≠êÂΩàÊï∏Èáè',
				function()
                   bullets1()
				end),
CAtext('ÂèØËÅØÊ©ü'),
CAswitch(
				'Â≠êÂΩàÈõÜ‰∏≠',
				function()
                   bulletconcentration1()
				end,
		function()
            bulletconcentration2()
		end),
CAswitch(
				'ÁÑ°ÂæåÂ∫ßÂäõ',
				function()
                   norecoil1()
				end,
		function()
            norecoil2()
		end),
CAswitch(
		"ÊßçÊ¢∞ÈñãÈè°",
		function()
            scope1()
		end,
		function()
            scope2()
		end),
CAbox({
         "ËÅØÊ©üÊßçÊ¢∞Âä†Âº∑",
			CAtext('ÂÉÖÊàø‰∏ª', '#ffffff', '12sp', true),
			CAbutton(
				'ÁãôÊìäÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   aEnhancedGun1()
				end),
			CAbutton(
				'Ë°ùÈãíÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   aEnhancedGun2()
				end),
			CAbutton(
				'ÈáçÊ©üÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   aEnhancedGun3()
				end),
			CAbutton(
				'ÊâãÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   aEnhancedGun4()
				end),
}),
CAbox({
         "Êàø‰∏ªÊßçÊ¢∞Âä†Âº∑",
			CAtext('ÂèØËÅØÊ©ü', '#ffffff', '12sp', true),
			CAbutton(
				'ÁãôÊìäÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   EnhancedGun1()
				end),
			CAbutton(
				'Ë°ùÈãíÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   EnhancedGun2()
				end),
			CAbutton(
				'ÈáçÊ©üÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   EnhancedGun3()
				end),
			CAbutton(
				'ÊâãÊßçÂº∑Âåñ',
				function()
				gg.toast("Ê≠£Âú®Âº∑Âåñ...")
                   EnhancedGun4()
				end),
}),
}, { --7
	CAswitch(
		"ÈÄÄÂá∫ËºîÂä©",
		function()
			Lock.unUi()
			gg.alert("üê≥‰ΩúËÄÖYT:SkyCapooüê≥\nüê≥‰ΩúËÄÖbilibili:SkyCapooüê≥\n.....ËæÖÂä©Â∑≤ÂÅúÊ≠¢ËøêË°å.....‚ù§Ô∏èüíõüíöüíôüíú") 
          print("üê≥‰ΩúËÄÖYT:SkyCapooüê≥\nüê≥‰ΩúËÄÖbilibili:SkyCapooüê≥\nüîÜÊàêÂäüÂÖ≥Èó≠ÔºåÊ¨¢Ëøé‰∏ãÊ¨°‰ΩøÁî®")
          gg.playMusic("stop")
        	gg.exit()
		end,
		function()

		end),
}, { --8
},
})
end

local running = false
function dologin()
gg.toast("üî∞ÈªûÊìä‰øÆÊîπÂô®ÂúñÊ®ôÁôªÈô∏ËºîÂä©")
running = true
while running do
  if gg.isVisible(true) then
    gg.setVisible(false)
    checkplayerdata()
    choicelog = gg.choice({"üî∞ÁôªÂÖ•ËºîÂä©üî∞", "üî∞ÈÅéÊ™¢Ê∏¨üî∞", "‚ùåÈÄÄÂá∫ËºîÂä©‚ùå"}, nil, "üéÅ‰ΩúËÄÖÔºöSkyCapoo")
   if choicelog == 1 then
    if Myuid == 0 or Myuid == nil then
    gg.toast("Ë´ãÂÖàÁôªÂÖ•ÈÅäÊà≤")
    else
    running = false
    Sendtolog()
    starttheUI()
    end
   elseif choicelog == 2 then
      c()
   elseif choicelog == 3 then
      gg.toast("ÈÄÄÂá∫ËºîÂä©")
      running = false
      gg.exit()
  end
  end
  gg.sleep(100)  -- ÊØè0.1ÁßíÊ™¢Êü•‰∏ÄÊ¨°Êá∏ÊµÆÁ™ó
end
end



function SkyCapoofileExists(name)
  local file = io.open(name, "r")
  if file then
    file:close()
    return true
  else
    return false
  end
end


function gameloging()
-- Á¨¨‰∏ÄÊ¨°ÈÅãË°åÊôÇÔºåÊèêÁ§∫Áî®Êà∂Ëº∏ÂÖ•ÂêçÁ®±
if not SkyCapoofileExists(gg.getFile() .. "_Skyusername.txt") then
  loguser = gg.prompt({"Ë´ãË®≠ÂÆöÁî®Êà∂ÂêçÁ®±"}, {[1] = "User"}, {[1] = "text"})[1]
  if not loguser then gg.alert("Êú™Ë®≠ÂÆöÁî®Êà∂ÂêçÁ®±") return end
  if loguser ~= "" then
    assfile = io.open(gg.getFile() .. "_Skyusername.txt", "w")
    assfile:write(loguser)
    assfile:close()
    gg.alert("Áî®Êà∂ÂêçÁ®±Â∑≤Ë®≠ÂÆö: " .. loguser)
    username = loguser
    gg.alert("Ê≠°Ëøé‰ΩøÁî®, Áî®Êà∂: " .. username)
    dologin()
  else
    gg.alert("Êú™Ë®≠ÂÆöÁî®Êà∂ÂêçÁ®±ÔºåËºîÂä©ÈÄÄÂá∫")
    gg.exit()
  end
else
  -- Êñá‰ª∂Â≠òÂú®ÊôÇÔºåËá™ÂãïËÆÄÂèñÁî®Êà∂ÂêçÁ®±
  assfile = io.open(gg.getFile() .. "_Skyusername.txt", "r")
  username = assfile:read("*a")
  assfile:close()
  gg.alert("Ê≠°Ëøé‰ΩøÁî®, Áî®Êà∂: " .. username)
  dologin()
end
end
gameloging()

Lock.Ui(invoke, nil, function(err) print(err) end)
--os.exit()ÂÅúÊ≠¢ËÖ≥Êú¨
--gg.exit()ÈÄÄÂá∫‰øÆÊîπÂô®